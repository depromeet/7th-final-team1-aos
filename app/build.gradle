apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.depromeet.finddepro"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        debug {
            // Run code coverage reports by default on debug builds.
            // testCoverageEnabled = true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "mock"

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
            dimension "mock"
        }
        prod {

        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions {
        animationsDisabled true

        unitTests {
            includeAndroidResources true
            returnDefaultValues = true
            // Always show the result of every unit test, even if it passes.
            all {
                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.multidex:multidex:$rootProject.multiDexVersion"
    implementation "androidx.core:core:$rootProject.coreVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerViewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "androidx.legacy:legacy-support-v4:$rootProject.legacySupportVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"

    implementation "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

    implementation("com.github.bumptech.glide:glide:$rootProject.glideVersion") {
        exclude group: "com.android.support"
    }
    annotationProcessor "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    //annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation "androidx.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"

    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "org.mockito:mockito-all:$rootProject.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$rootProject.hamcrestVersion"
    testImplementation "org.powermock:powermock-module-junit4:$rootProject.powerMockitoVersion"
    testImplementation "org.powermock:powermock-api-mockito:$rootProject.powerMockitoVersion"

    androidTestImplementation "androidx.test.ext:junit:$rootProject.testJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.rulesVersion"

    //qr코드
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'


}

/*
Resolves dependency versions across test and production APKs, specifically, transitive
dependencies. This is required since Espresso internally has a dependency on support-annotations.
*/
configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
}
